<!DOCTYPE html>
<html>
<head>
  <title>Simple Map</title>
  <meta name="viewport" content="initial-scale=1.0">
  <meta charset="utf-8">
  <style>
      /* Always set the map height explicitly to define the size of the div
      * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
  </head>
  <body>
    <div id="map"></div>
    <script>
      const Url='localhost:3000/add'
      const data={
        name:"Said",
        id:23
      }
      var map;
      var tab_zombie = new Map();
      var zomb_conteur = 0;
      var choix = 0; //DÃ©termine si on place des zombies ou des survivants O pour Survivant et 1 pour Zombies
      var low_limit = 50.78680113991122;
      var high_limit = 50.84742762994356;
      var left_limit = 3.1701154653811203;
      var right_limit = 3.335768694140886;

      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat:  50.798544, lng: 3.279309},
          zoom: 17,
          //marker = new google.maps.Marker({position: event.latLng, map: map})
        });

        //infected area in red
        // Define the LatLng coordinates for the polygon's path.
        var RectCoords = [
        {lat: 50.84742762994356, lng: 3.1701154653811203},
        {lat: 50.78680113991122, lng: 3.1701154653811203},
        {lat: 50.78680113991122, lng: 3.335768694140886},
        {lat:  50.84742762994356, lng: 3.335768694140886}
        ];

        // Construct the polygon.
        var InfectedArea = new google.maps.Polygon({
          paths: RectCoords,
          strokeColor: '#FF0000',
          strokeOpacity: 0.8,
          strokeWeight: 2,
          fillColor: '#FF0000',
          fillOpacity: 0.35
        });
        InfectedArea.setMap(map);

        fetch('/getPos')
        .then(response => response.json())
        .then((data) => {
          console.log(data)
          data.forEach((zombie) =>{
            var posini = new google.maps.LatLng(zombie.latitudeZ, zombie.longitudeZ);
            var zombini = new google.maps.Marker({position: posini, map: map});
        console.log(zombie.latitude)
      })
        })

        if (navigator.geolocation) {

          navigator.geolocation.getCurrentPosition(function(position) {

            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };           
            
            var pos2 = new google.maps.LatLng(position.coords.latitude, position.coords.longitude)
            
            initial = new google.maps.Marker({position: pos2, map: map, icon: {url: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png"}});  

          }, function() {
            handleLocationError(true, infoWindow, map.getCenter()); 
          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }

        if(choix==0){
          google.maps.event.addListener(InfectedArea, 'click', function(event) {
            if (low_limit <= event.latLng.lat()&& event.latLng.lat() <= high_limit && left_limit<=event.latLng.lng() && event.latLng.lng()<=right_limit ){
              marker = new google.maps.Marker({position: event.latLng, map: map});  
              alert("Latitude: " + event.latLng.lat() + " " + ", longitude: " + event.latLng.lng());
              zomb_conteur = zomb_conteur +1 ;
              tab_zombie.set('id',zomb_conteur);
              tab_zombie.set('PosX',event.latLng.lat());
              tab_zombie.set('PosY',event.latLng.lng());
              fetch('/add',{
                method: 'post',
                // Adding body or contents to send 
                body: JSON.stringify({ 
                  lat: event.latLng.lat(), 
                  long: event.latLng.lng()
                }), 
                headers: { 
                  "Content-type": "application/json; charset=UTF-8"
                }
              })
              alert("PosX"+zomb_conteur+" " + event.latLng.lat() + " " + " PosY"+" "+zomb_conteur+event.latLng.lng())
            }
            else{
              alert("Select a location inside the Isolation Zone");
            } 
            google.maps.event.addListener(map, 'click', function(event){
              alert("Select a location inside the Isolation Zone")
            })      
          });       
        }
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA7eujFSmk1O6fY7hOu3CyKD5sZryCNJUo&callback=initMap"
    async defer></script>
  </body>
  </html>